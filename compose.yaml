services:
  postgres:
    container_name: postgres-pfm
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - finance_management_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: keycloak-pfm
    image: quay.io/keycloak/keycloak:25.0.5
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      PFM_DB: postgres
      PFM_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      PFM_DB_USERNAME: ${POSTGRES_USER}
      PFM_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HTTP_MANAGEMENT_PORT: 9000
      KC_HTTP_MANAGEMENT_RELATIVE_PATH: /management
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "9090:8080"
      - "9000:9000"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - finance_management_network

  ## Flyway Service
  flyway:
    container_name: flyway-pfm
    image: flyway/flyway:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    networks:
      - finance_management_network
    command: -connectRetries=60 migrate

  app:
    container_name: app-pfm
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/finance_management
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '8080:8080'
    networks:
      - finance_management_network
    command: sh -c "java -jar app.jar"

volumes:
  postgres_data:
    driver: local
  keycloak:
    driver: local

networks:
  finance_management_network:
    driver: bridge
