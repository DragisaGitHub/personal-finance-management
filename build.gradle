plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.dragi.financemanager'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas:3.3.4'
	implementation 'org.flywaydb:flyway-core:10.19.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
	implementation 'com.itextpdf:itextpdf:5.5.13.4'
	implementation 'com.itextpdf:html2pdf:5.0.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// Docker Compose integration (for Spring Boot)
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// PostgreSQL database
	runtimeOnly 'org.postgresql:postgresql'

	// Keycloak for OAuth2
	implementation 'org.keycloak:keycloak-spring-boot-starter:25.0.3'
	implementation 'org.keycloak:keycloak-core:25.0.5'


	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	// JUnit platform launcher
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Mockito for testing
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
		showStandardStreams = true
	}
}